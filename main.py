import disnake
from disnake.ext import commands
import sqlite3
import asyncio
import time
import datetime
import aiohttp

bot = commands.Bot(command_prefix="+", help_command=None, intents=disnake.Intents.all())

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('reputation.db', check_same_thread=False)
cursor = conn.cursor()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ—ë
cursor.execute('''
    CREATE TABLE IF NOT EXISTS reputation (
        user_id INTEGER PRIMARY KEY,
        reputation INTEGER,
        last_used INTEGER
    )
''')

# –£–±–∏—Ä–∞–µ–º conn.commit() –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã

async def update_activity():
    await bot.wait_until_ready()

    ip = "194.147.90.86"
    port = 25544

    while not bot.is_closed():
        server = await get_server_info(ip, port)
        if server:
            player_count = server["attributes"]["players"]
            max_players = server["attributes"]["maxPlayers"]
            activity = disnake.Activity(
                type=disnake.ActivityType.watching,
                name=f"{player_count}/{max_players} –∏–≥—Ä–æ–∫–æ–≤"
            )
            await bot.change_presence(activity=activity)
        await asyncio.sleep(300)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

bot.loop.create_task(update_activity())

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

@bot.command()
async def rep(ctx, *, args: str = ""):
        if ctx.channel.id != 967445056250322964:
        return
    
    if not args:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é, –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    member = ctx.author
    if ctx.message.mentions:
        member = ctx.message.mentions[0]

    if member.id == ctx.author.id:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º–æ–º—É —Å–µ–±–µ!",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT reputation FROM reputation WHERE user_id = ?", (member.id,))
    result = cursor.fetchone()
    current_reputation = result[0] if result else 0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    cursor.execute("SELECT last_used FROM reputation WHERE user_id = ?", (ctx.author.id,))
    result = cursor.fetchone()
    last_used = result[0] if result else 0

    if time.time() - last_used < 3600:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description=f"–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É +rep. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ {int(3600 - (time.time() - last_used))} —Å–µ–∫—É–Ω–¥.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1
    cursor.execute("INSERT OR IGNORE INTO reputation (user_id, reputation, last_used) VALUES (?, 0, ?)", (member.id, int(time.time())))
    cursor.execute("UPDATE reputation SET reputation = reputation + ?, last_used = ? WHERE user_id = ?", (1, int(time.time()), member.id))
    conn.commit()

    # –£–¥–∞–ª–µ–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    cleaned_args = args
    for mention in ctx.message.mentions:
        cleaned_args = cleaned_args.replace(mention.mention, "")

    comment = f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {cleaned_args.strip()}"
    embed = disnake.Embed(
        title="–†–µ–ø—É—Ç–∞—Ü–∏—è",
        description=f'üìà –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{ctx.author.mention}** –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.mention}**\n–í—Å–µ–≥–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏: **{current_reputation + 1}**\n{comment}',
        color=disnake.Color.green()
    )
    await ctx.send(embed=embed)

    # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    await ctx.message.delete()

    
@bot.command()
async def unrep(ctx, *, args: str = ""):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –Ω—É–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    if ctx.channel.id != 967445056250322964:
        return
        
    if not args:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–±—Ä–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é, –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    member = ctx.author
    if ctx.message.mentions:
        member = ctx.message.mentions[0]

    if member.id == ctx.author.id:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º–æ–º—É —Å–µ–±–µ!",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT reputation FROM reputation WHERE user_id = ?", (member.id,))
    result = cursor.fetchone()
    current_reputation = result[0] if result else 0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    cursor.execute("SELECT last_used FROM reputation WHERE user_id = ?", (ctx.author.id,))
    result = cursor.fetchone()
    last_used = result[0] if result else 0

    if time.time() - last_used < 3600:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description=f"–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É unrep. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ {int(3600 - (time.time() - last_used))} —Å–µ–∫—É–Ω–¥.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # –£–º–µ–Ω—å—à–∞–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1
    cursor.execute("INSERT OR IGNORE INTO reputation (user_id, reputation, last_used) VALUES (?, 0, ?)", (member.id, int(time.time())))
    cursor.execute("UPDATE reputation SET reputation = reputation - ?, last_used = ? WHERE user_id = ?", (1, int(time.time()), member.id))
    conn.commit()

    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    cleaned_args = args
    for mention in ctx.message.mentions:
        cleaned_args = cleaned_args.replace(mention.mention, "")

    comment = f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {cleaned_args.strip()}"
    embed = disnake.Embed(
        title="–†–µ–ø—É—Ç–∞—Ü–∏—è",
        description=f'üìâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{ctx.author.mention}** —É–±—Ä–∞–ª –æ–¥–Ω—É —Ä–µ–ø—É—Ç–∞—Ü–∏—é —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.mention}**\n–¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: **{current_reputation - 1}**.\n{comment}',
        color=disnake.Color.orange()
    )
    await ctx.send(embed=embed)

    # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    await ctx.message.delete()


@bot.command()
async def setrep(ctx, member: disnake.Member = None, amount: int = 0):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –Ω—É–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    if ctx.channel.id != 967445056250322964:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    allowed_roles = [967112931735126036, 956192778134650920, 358551967838109698]  # –ó–∞–º–µ–Ω–∏—Ç–µ ID —Ä–æ–ª–µ–π –Ω–∞ —Å–≤–æ–∏
    user_roles = [role.id for role in ctx.author.roles]

    if not any(role_id in user_roles for role_id in allowed_roles):
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    if member is None:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é.",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    sender = ctx.author
    if member.id == sender.id:
        embed = disnake.Embed(
            title="–û—à–∏–±–∫–∞",
            description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º–æ–º—É —Å–µ–±–µ!",
            color=disnake.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("INSERT OR IGNORE INTO reputation (user_id, reputation, last_used) VALUES (?, 0, ?)", (member.id, int(time.time())))
    cursor.execute("UPDATE reputation SET reputation = ?, last_used = ? WHERE user_id = ?", (amount, int(time.time()), member.id))
    conn.commit()

    embed = disnake.Embed(
        title="–†–µ–ø—É—Ç–∞—Ü–∏—è",
        description=f'üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{sender.mention}** —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–µ–ø—É—Ç–∞—Ü–∏—é **{amount}** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.mention}**.',
        color=disnake.Color.red()
    )
    await ctx.send(embed=embed)

async def get_server_info(ip, port):
    url = f"https://api.battlemetrics.com/servers?filter[game]=unturned&filter[search]={ip}:{port}"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            if data.get("data"):
                server = data["data"][0]
                return server
            else:
                return None

@bot.slash_command()
async def online(ctx):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–Ω–ª–∞–π–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    ip = "194.147.90.86"
    port = 25544

    server = await get_server_info(ip, port)

    if server:
        attributes = server["attributes"]
        player_count = attributes["players"]
        max_players = attributes["maxPlayers"]

        embed = disnake.Embed(
            title=f"Server Status - DWS WAR RP",
            description=f"Online Players: {player_count}/{max_players}",
            color=disnake.Color.green()
        )

        await ctx.send(embed=embed)
    else:
        await ctx.send("The server was not found.")
        
@bot.slash_command()
async def players(ctx):
    """–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ–Ω–ª–∞–π–Ω–µ"""
    ip = "194.147.90.86"
    port = 25544

    response = await aiohttp.ClientSession().get(f"https://api.battlemetrics.com/servers?filter[game]=unturned&filter[search]={ip}:{port}")
    data = await response.json()

    if "data" in data and len(data["data"]) > 0:
        server_id = data["data"][0]["id"]
        players_response = await aiohttp.ClientSession().get(f"https://api.battlemetrics.com/players?filter[servers]={server_id}&filter[online]=true")
        players_data = await players_response.json()

        if "data" in players_data and len(players_data["data"]) > 0:
            players = players_data["data"]
            player_list = [player["attributes"]["name"] for player in players]

            # –†–∞–∑–±–∏–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 20
            player_groups = [player_list[i:i + 20] for i in range(0, len(player_list), 20)]

            for group in player_groups:
                player_names = "\n".join(group)
                await ctx.send(f"Players Online - DWS WARP RP:\n{player_names}")
        else:
            await ctx.send("No players online.")
    else:
        await ctx.send("Server not found.")
  
@bot.command()
async def rating(ctx, member: disnake.Member):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT reputation FROM reputation WHERE user_id = ?", (member.id,))
    result = cursor.fetchone()
    current_reputation = result[0] if result else 0

    embed = disnake.Embed(
        title="–†–µ–ø—É—Ç–∞—Ü–∏—è",
        description=f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} —Ä–µ–ø—É—Ç–∞—Ü–∏—è: {current_reputation}",
        color=disnake.Color.blue()
    )
    await ctx.send(embed=embed)

bot.run("MTEwOTkxMDczMTgwNzI2ODg2NQ.Go-fNw.JAViLdmfINg-d3xXvi_810tSbB72Jm8gJRSv28")
